[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rom-cleanup-tool"
version = "2.1.0"
description = "A Python utility to streamline large ROM collections by removing redundant regional duplicates"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "ROM Cleanup Tool Contributors"}
]
keywords = ["rom", "games", "cleanup", "emulation", "retro-gaming"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment",
    "Topic :: System :: Archiving",
    "Topic :: Utilities",
]
dependencies = [
    "requests>=2.25.0",
]

[project.optional-dependencies]
build = [
    "pyinstaller>=5.0",
]
dev = [
    "pytest>=6.0",
    "black>=22.0",
    "isort>=5.0",
    "mypy>=1.0",
    "flake8>=4.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=4.0",
]

[project.scripts]
rom-cleanup = "rom_cleanup:main"
rom-cleanup-gui = "rom_cleanup_gui:main"

[project.urls]
Homepage = "https://github.com/yourusername/rom-cleanup-tool"
Repository = "https://github.com/yourusername/rom-cleanup-tool"
Issues = "https://github.com/yourusername/rom-cleanup-tool/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["rom_cleanup*", "rom_utils*", "rom_constants*", "config*"]

[tool.flake8]
max-line-length = 88

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]
